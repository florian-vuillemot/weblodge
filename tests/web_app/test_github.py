"""
Test the GitHub command.
"""
import unittest
from unittest.mock import MagicMock

from weblodge.web_app.github import GitHubConfig, github


class TestGitHub(unittest.TestCase):
    """
    Test the GitHub command.
    """
    def test_create(self):
        """
        Create an application.
        """
        azure_service = MagicMock()

        config = GitHubConfig(
            subdomain='test-subdomain',
            branch='main-branch',
            username='test-username',
            repository='test-repository',
            location='northeurope',
            delete=False
        )

        workflow = github(azure_service, config)

        azure_service.get_github_application.assert_called_once_with(
            name='test-subdomain',
            branch='main-branch',
            username='test-username',
            repository='test-repository',
            location='northeurope',
        )
        self.assertEqual(workflow.branch, 'main-branch')
        self.assertIsNotNone(workflow.client_id)
        self.assertIsNotNone(workflow.subscription_id)
        self.assertIsNotNone(workflow.tenant_id)
        self.assertEqual(
            workflow.content,
            """\
# This file is generated by weblodge.
# Please do not edit it manually.
name: Weblodge deploy.
on:
  push:
    branches:
      - main-branch

permissions:
  id-token: write
  contents: read

jobs:
  build-and-deploy:
    timeout-minutes: 20
    runs-on: ubuntu-latest
    steps:
      - name: 'Az CLI login'
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - uses: actions/checkout@v4

      - name: 'Install WebLodge.'
        run: |
          pip install weblodge

      - name: 'Build and deploy.'
        run: |
          weblodge deploy --build
"""
        )

    def test_delete(self):
        """
        Delete the GitHub application.
        """
        azure_service = MagicMock()

        config = GitHubConfig(
            subdomain='test-subdomain',
            branch='main-branch',
            username='test-username',
            repository='test-repository',
            location='northeurope',
            delete=True
        )

        workflow = github(azure_service, config)

        azure_service.delete_github_application.assert_called_once()
        azure_service.service.get_github_application.assert_not_called()
        self.assertIsNone(workflow)
